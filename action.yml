name: 'CI/CD and manual prod deployments using ssh+github'
description: 'This will run deployment to stage server on every push to master and contains a manual workflow for deploying to production.'
author: 'Patrik Grinsvall'
inputs:
  STAGE_SSH_HOST:
    description: 'ssh host'
    default: 'unset'
    required: true
  STAGE_SSH_PORT:
    description: 'ssh port'
    required: true
    default: 22
  STAGE_SSH_KEY:
    description: 'private key in NOT IN OPENSSH FORMAT but in RSA PRIVATE KEY format.'
    required: true
    default: 'unset'
  STAGE_SSH_USER:
     description: 'SSH user to connect to the stage server with'
     required: true
     default: 'unset'
  STAGE_REMOTE_PATH:
    description: 'The path on server to update'
    required: true
    default: 'unset'
  PROD_SSH_KEY:
    description: 'the private key'
    required: false
  PROD_SSH_HOST:
    description: 'the host'
    required: false
  PROD_SSH_PORT:
    description: 'port if other than 22'
    required: false
    default: '22'
  PROD_SSH_USER:
    description: 'the user the private key belongs to'
    required: false
  PROD_REMOTE_PATH:
    required: false
    description: 'the path to the repo'
outputs:
  deploystage: 
    description: "output from deploystage"
    value: ${{ steps.deploystage.outputs.res }}
runs:
  using: "composite"
  steps:
    - id: deploystage
      shell: bash
      run: |
          echo $INPUT_STAGE_SSH_PORT
          mkdir -p ~/.ssh
          echo "$INPUT_STAGE_SSH_KEY" > ~/.ssh/stage_id_rsa
          sudo chmod 600 ~/.ssh/stage_id_rsa
          chmod 600 ~/.ssh/stage_id_rsa
          echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
          chmod 700 ~/.ssh
          chmod 600 ~/.ssh/stage_id_rsa
          $out=`ssh -i ~/.ssh/stage_id_rsa -o StrictHostKeyChecking=no -p $INPUT_STAGE_SSH_PORT $INPUT_STAGE_SSH_USER@$INPUT_STAGE_SSH_HOST "cd $INPUT_STAGE_REMOTE_PATH && ls -al"`
          echo "::set-output name=res::$out"
